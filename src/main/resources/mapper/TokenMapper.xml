<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.llmctl.mapper.TokenMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.llmctl.entity.Token">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="provider_id" property="providerId" jdbcType="VARCHAR"/>
        <result column="value" property="value" jdbcType="VARCHAR"/>
        <result column="alias" property="alias" jdbcType="VARCHAR"/>
        <result column="weight" property="weight" jdbcType="INTEGER"/>
        <result column="enabled" property="enabled" jdbcType="BOOLEAN"/>
        <result column="healthy" property="healthy" jdbcType="BOOLEAN"/>
        <result column="last_used" property="lastUsed" jdbcType="TIMESTAMP"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        id, provider_id, value, alias, weight, enabled, healthy, last_used,
        created_at, updated_at
    </sql>

    <!-- 根据ID查询Token -->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tokens
        WHERE id = #{id}
    </select>

    <!-- 根据Provider ID查询Token列表 -->
    <select id="findByProviderId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tokens
        WHERE provider_id = #{providerId}
        ORDER BY weight DESC, created_at ASC
    </select>

    <!-- 根据Provider ID查询可用的Token列表 -->
    <select id="findAvailableByProviderId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tokens
        WHERE provider_id = #{providerId} AND enabled = 1 AND healthy = 1
        ORDER BY weight DESC, last_used ASC
    </select>

    <!-- 查询所有Token -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tokens
        ORDER BY provider_id, weight DESC, created_at ASC
    </select>

    <!-- 插入Token -->
    <insert id="insert" parameterType="com.llmctl.entity.Token">
        INSERT INTO tokens (
            id, provider_id, value, alias, weight, enabled, healthy,
            last_used, created_at, updated_at
        )
        VALUES (
            #{id}, #{providerId}, #{value}, #{alias}, #{weight}, #{enabled}, #{healthy},
            #{lastUsed}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <!-- 更新Token -->
    <update id="update" parameterType="com.llmctl.entity.Token">
        UPDATE tokens
        SET
            value = #{value},
            alias = #{alias},
            weight = #{weight},
            enabled = #{enabled},
            healthy = #{healthy},
            last_used = #{lastUsed},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 更新Token健康状态 -->
    <update id="updateHealthStatus" parameterType="map">
        UPDATE tokens
        SET healthy = #{healthy}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新Token最后使用时间 -->
    <update id="updateLastUsed" parameterType="java.lang.String">
        UPDATE tokens
        SET last_used = NOW(), updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除Token -->
    <delete id="deleteById" parameterType="java.lang.String">
        DELETE FROM tokens
        WHERE id = #{id}
    </delete>

    <!-- 根据Provider ID删除所有Token -->
    <delete id="deleteByProviderId" parameterType="java.lang.String">
        DELETE FROM tokens
        WHERE provider_id = #{providerId}
    </delete>

    <!-- 统计指定Provider的Token数量 -->
    <select id="countByProviderId" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM tokens
        WHERE provider_id = #{providerId}
    </select>

    <!-- 统计指定Provider的可用Token数量 -->
    <select id="countAvailableByProviderId" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM tokens
        WHERE provider_id = #{providerId} AND enabled = 1 AND healthy = 1
    </select>

    <!-- 检查Token别名在指定Provider下是否已存在（排除指定ID） -->
    <select id="existsByProviderIdAndAliasAndIdNot" parameterType="map" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM tokens
        WHERE provider_id = #{providerId} AND alias = #{alias} AND id != #{excludeId}
    </select>

    <!-- 检查Token别名在指定Provider下是否已存在 -->
    <select id="existsByProviderIdAndAlias" parameterType="map" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM tokens
        WHERE provider_id = #{providerId} AND alias = #{alias}
    </select>

</mapper>