<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.llmctl.mapper.SessionMapper">

    <!-- Session结果映射 -->
    <resultMap id="SessionResultMap" type="com.llmctl.entity.Session">
        <id column="id" property="id"/>
        <result column="provider_id" property="providerId"/>
        <result column="token_id" property="tokenId"/>
        <result column="pid" property="pid"/>
        <result column="working_directory" property="workingDirectory"/>
        <result column="command" property="command"/>
        <result column="status" property="status" typeHandler="com.llmctl.config.SessionStatusTypeHandler"/>
        <result column="start_time" property="startTime"/>
        <result column="last_activity" property="lastActivity"/>
        <result column="end_time" property="endTime"/>
    </resultMap>

    <!-- 根据ID查询Session -->
    <select id="findById" parameterType="string" resultMap="SessionResultMap">
        SELECT * FROM sessions WHERE id = #{id}
    </select>

    <!-- 查询所有Session，优先显示活跃会话 -->
    <select id="findAll" resultMap="SessionResultMap">
        SELECT * FROM sessions
        ORDER BY
            CASE status
                WHEN 'active' THEN 1
                WHEN 'inactive' THEN 2
                WHEN 'terminated' THEN 3
                ELSE 4
            END,
            start_time DESC
    </select>

    <!-- 根据状态查询Session列表 -->
    <select id="findByStatus" parameterType="string" resultMap="SessionResultMap">
        SELECT * FROM sessions WHERE status = #{status} ORDER BY start_time DESC
    </select>

    <!-- 根据Provider ID查询Session列表 -->
    <select id="findByProviderId" parameterType="string" resultMap="SessionResultMap">
        SELECT * FROM sessions WHERE provider_id = #{providerId} ORDER BY start_time DESC
    </select>

    <!-- 查询活跃的Session列表 -->
    <select id="findActiveSessions" resultMap="SessionResultMap">
        SELECT * FROM sessions WHERE status = 'active' ORDER BY last_activity DESC
    </select>

    <!-- 根据进程ID查询Session -->
    <select id="findByPid" parameterType="int" resultMap="SessionResultMap">
        SELECT * FROM sessions WHERE pid = #{pid}
    </select>

    <!-- 插入Session -->
    <insert id="insert" parameterType="com.llmctl.entity.Session">
        INSERT INTO sessions (id, provider_id, token_id, pid, working_directory, command, status, start_time, last_activity, end_time)
        VALUES (#{id}, #{providerId}, #{tokenId}, #{pid}, #{workingDirectory}, #{command}, #{status,typeHandler=com.llmctl.config.SessionStatusTypeHandler}, #{startTime}, #{lastActivity}, #{endTime})
    </insert>

    <!-- 更新Session -->
    <update id="update" parameterType="com.llmctl.entity.Session">
        UPDATE sessions SET
            provider_id = #{providerId},
            token_id = #{tokenId},
            pid = #{pid},
            working_directory = #{workingDirectory},
            command = #{command},
            status = #{status,typeHandler=com.llmctl.config.SessionStatusTypeHandler},
            last_activity = #{lastActivity},
            end_time = #{endTime}
        WHERE id = #{id}
    </update>

    <!-- 更新Session状态 -->
    <update id="updateStatus">
        UPDATE sessions SET status = #{status}, last_activity = NOW() WHERE id = #{id}
    </update>

    <!-- 更新Session最后活动时间 -->
    <update id="updateLastActivity" parameterType="string">
        UPDATE sessions SET last_activity = NOW() WHERE id = #{id}
    </update>

    <!-- 终止Session（设置为非活跃状态） -->
    <update id="terminate" parameterType="string">
        UPDATE sessions SET status = 'inactive', end_time = NOW(), last_activity = NOW() WHERE id = #{id}
    </update>

    <!-- 重新激活Session（将inactive状态改为active） -->
    <update id="reactivate" parameterType="string">
        UPDATE sessions SET
            status = 'active',
            start_time = NOW(),
            end_time = NULL,
            last_activity = NOW()
        WHERE id = #{id} AND status = 'inactive'
    </update>

    <!-- 根据ID删除Session -->
    <delete id="deleteById" parameterType="string">
        DELETE FROM sessions WHERE id = #{id}
    </delete>

    <!-- 根据Provider ID删除所有Session -->
    <delete id="deleteByProviderId" parameterType="string">
        DELETE FROM sessions WHERE provider_id = #{providerId}
    </delete>

    <!-- 删除指定时间之前的已终止Session
         注意：'terminated'状态已废弃，保留此查询仅为数据库兼容性考虑 -->
    <delete id="deleteTerminatedBefore" parameterType="java.time.LocalDateTime">
        DELETE FROM sessions WHERE status = 'terminated' AND end_time &lt; #{beforeTime}
    </delete>

    <!-- 统计Session总数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM sessions
    </select>

    <!-- 统计指定状态的Session数量 -->
    <select id="countByStatus" parameterType="string" resultType="long">
        SELECT COUNT(*) FROM sessions WHERE status = #{status}
    </select>

    <!-- 统计指定Provider的Session数量 -->
    <select id="countByProviderId" parameterType="string" resultType="long">
        SELECT COUNT(*) FROM sessions WHERE provider_id = #{providerId}
    </select>

    <!-- 应用启动时，将所有活跃会话设置为非活跃状态
         原因：桌面应用重启后，Electron终端进程已全部终止 -->
    <update id="deactivateAllActiveSessions">
        UPDATE sessions
        SET status = 'inactive',
            last_activity = NOW()
        WHERE status = 'active'
    </update>

</mapper>