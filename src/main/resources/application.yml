server:
  port: 8080
  servlet:
    context-path: /llmctl

spring:
  application:
    name: llmctl

  # 启用CGLIB代理模式（支持@Scheduled和@Async注解在实现类上）
  aop:
    proxy-target-class: true

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB      # 单个文件最大大小
      max-request-size: 10MB   # 请求最大大小

  datasource:
    url: jdbc:mysql://117.72.200.2:3306/llmctl?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: huanyu
    password: ENC(P4JtACctTK7jRQERpp3ODF31VeH080Ak)
    driver-class-name: com.mysql.cj.jdbc.Driver

  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

  # 邮件配置
  mail:
    host: smtp.qq.com  # 或 smtp.163.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  # Redis配置
  data:
    redis:
      # ========== 单机模式 ==========
      host: 117.72.200.2
      port: 6379
      password: ENC(rcCRNDd6TEkRQoIKLfnN8mQWQpEoqA1K)
        # ========== 集群模式 ==========
        # cluster:
        #   nodes:
        #     - 192.168.1.100:6379
        #     - 192.168.1.101:6379
        #     - 192.168.1.102:6379
        #   max-redirects: 3              # 最大重定向次数

        # ========== 哨兵模式 ==========
        # sentinel:
        #   master: mymaster              # 主节点名称
        #   nodes:
        #     - 192.168.1.100:26379
        #     - 192.168.1.101:26379
        #     - 192.168.1.102:26379
      database: 0                        # Redis数据库索引（0-15）
      timeout: 5000                      # 连接超时时间（毫秒）
      lettuce:
        pool:
          max-active: 20                 # 连接池最大连接数
          max-idle: 10                   # 连接池最大空闲连接数
          min-idle: 2                    # 连接池最小空闲连接数
          max-wait: 3000                 # 连接池最大阻塞等待时间（毫秒）


# MyBatis配置
mybatis:
  # Mapper XML 文件位置
  mapper-locations: classpath:mapper/*.xml
  # 实体类包路径（用于别名）
  type-aliases-package: com.llmctl.entity
  # 自定义类型处理器包路径
  type-handlers-package: com.llmctl.config
  # Mapper 接口扫描路径（等同于 @MapperScan 注解）
  # 注意：建议使用 @MapperScan 注解方式，更清晰且类型安全
  # mapper-scan: com.llmctl.mapper
  configuration:
    map-underscore-to-camel-case: true
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # 已禁用详细SQL日志以提升性能
    cache-enabled: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false

# 日志配置
logging:
  level:
    root: INFO
    com.llmctl: INFO
    com.llmctl.mapper: WARN  # Mapper层只输出警告和错误，不输出SQL详情
    org.springframework: WARN
    org.mybatis: WARN


# 应用信息
info:
  app:
    name: LLMctl
    description: LLM Control System
    version: 2.2.0
    author: Liu Yifan

# Jasypt加密配置
jasypt:
  encryptor:
    password: ${JASYPT_PASSWORD}
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator

# JWT配置
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000  # 24小时（毫秒）
  refresh-expiration: 604800000  # 7天（毫秒）

# 头像上传配置
# 开发环境：使用本地路径，方便测试
# 生产环境：通过环境变量 AVATAR_UPLOAD_PATH 和 AVATAR_BASE_URL 覆盖
avatar:
  upload:
    # 开发环境默认：项目根目录下的 uploads/avatars/
    # 生产环境：设置环境变量 AVATAR_UPLOAD_PATH=/var/www/llmctl/downloads/llmctl/images/avatar/
    path: ${AVATAR_UPLOAD_PATH:uploads/avatars/}
  base:
    # 开发环境默认：本地文件路径（测试时可以直接访问文件）
    # 生产环境：设置环境变量 AVATAR_BASE_URL=http://117.72.200.2/downloads/llmctl/images/avatar/
    url: ${AVATAR_BASE_URL:http://localhost:8080/llmctl/uploads/}

# XXL-Job 配置
xxl:
  job:
    # ========== 执行器配置 ==========
    executor:
      appname: llmctl-executor                       # 执行器名称（唯一标识）
      ip:                                            # 执行器IP（留空自动获取）
      port: 9989           # 执行器端口（默认9999）
      logpath: ${XXL_JOB_LOG_PATH:logs/xxl-job}     # 日志路径
      logretentiondays: 30                           # 日志保留天数

    # ========== 调度中心配置 ==========
    admin:
      addresses: http://117.72.200.2:8088/xxl-job-admin  # 调度中心地址

    # ========== 执行器通信TOKEN ==========
    accessToken: ${XXL_JOB_ACCESS_TOKEN:liuyifanyifan}  # 与调度中心通信的Token（需与调度中心配置一致）

